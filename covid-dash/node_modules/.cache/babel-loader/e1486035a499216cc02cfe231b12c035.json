{"ast":null,"code":"var _jsxFileName = \"/Users/russellcoke/Documents/Dev/CovidDash/covid-dash/src/Components/MapCard.jsx\";\nimport React, { Component } from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker, Sphere, Graticule } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nimport countries_data from \"./data/dataset-json.json\";\nexport default class MapCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      marker: null,\n      geoUrl: \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\",\n      data: countries_data\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.data);\n  }\n\n  render() {\n    const colorScale = scaleLinear().domain([0, 15530314]).range([\"#ffedea\", \"#ff5233\"]);\n    const wrapperStyles = {\n      height: \"100%\",\n      width: \"100%\",\n      margin: \"0 auto\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ComposableMap, {\n      projectionConfig: {\n        rotate: [-10, 0, 0],\n        scale: 147\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Sphere, {\n      stroke: \"#E4E5E6\",\n      strokeWidth: 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Graticule, {\n      stroke: \"#E4E5E6\",\n      strokeWidth: 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), this.state.data.length > 0 && /*#__PURE__*/React.createElement(Geographies, {\n      geography: this.state.geoUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, ({\n      geographies\n    }) => geographies.map(geo => {\n      const d = this.state.data.find(s => s.ISO === geo.properties.ISO_A3); // for(let i = 0; i < this.state.data.length; i++){\n      //     if(this.state.data[i]['ISO'] == geo.properties.ISO_A3){\n      //         d = this.state.data[i];\n      //         break;\n      //     }\n      // }\n\n      return /*#__PURE__*/React.createElement(Geography, {\n        key: geo.rsmKey,\n        geography: geo,\n        fill: d ? colorScale(d[\"total\"]) : \"#F5F4F6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/russellcoke/Documents/Dev/CovidDash/covid-dash/src/Components/MapCard.jsx"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","Sphere","Graticule","scaleLinear","countries_data","MapCard","constructor","props","state","marker","geoUrl","data","componentDidMount","console","log","render","colorScale","domain","range","wrapperStyles","height","width","margin","rotate","scale","length","geographies","map","geo","d","find","s","ISO","properties","ISO_A3","rsmKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,WAAvC,EAAoDC,SAApD,EAA+DC,OAA/D,EAAwEC,MAAxE,EAAgFC,MAAhF,EAAwFC,SAAxF,QAAwG,mBAAxG;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,eAAe,MAAMC,OAAN,SAAsBX,SAAtB,CAA+B;AAE1CY,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,IADC;AAETC,MAAAA,MAAM,EAAG,wGAFA;AAGTC,MAAAA,IAAI,EAAEP;AAHG,KAAb;AAKH;;AAEDQ,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWG,IAAvB;AACH;;AAEDI,EAAAA,MAAM,GAAE;AACJ,UAAMC,UAAU,GAAGb,WAAW,GACzBc,MADc,CACP,CAAC,CAAD,EAAI,QAAJ,CADO,EAEdC,KAFc,CAER,CAAC,SAAD,EAAY,SAAZ,CAFQ,CAAnB;AAIA,UAAMC,aAAa,GAAG;AAClBC,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,KAAK,EAAE,MAFW;AAGlBC,MAAAA,MAAM,EAAE;AAHU,KAAtB;AAMA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AACA,MAAA,gBAAgB,EAAE;AACdC,QAAAA,MAAM,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,EAAS,CAAT,CADM;AAEdC,QAAAA,KAAK,EAAE;AAFO,OADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMA,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,SAAf;AAAyB,MAAA,WAAW,EAAE,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,eAOA,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAC,SAAlB;AAA4B,MAAA,WAAW,EAAE,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,EAQC,KAAKhB,KAAL,CAAWG,IAAX,CAAgBc,MAAhB,GAAyB,CAAzB,iBACG,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWE,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC;AAAEgB,MAAAA;AAAF,KAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACnB,YAAMC,CAAC,GAAG,KAAKrB,KAAL,CAAWG,IAAX,CAAgBmB,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUJ,GAAG,CAACK,UAAJ,CAAeC,MAAnD,CAAV,CADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;;AACA,0BACI,oBAAC,SAAD;AACA,QAAA,GAAG,EAAEN,GAAG,CAACO,MADT;AAEA,QAAA,SAAS,EAAEP,GAFX;AAGA,QAAA,IAAI,EAAEC,CAAC,GAAGb,UAAU,CAACa,CAAC,CAAC,OAAD,CAAF,CAAb,GAA4B,SAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH,KAfD,CAFJ,CATJ,CADJ,CADJ;AAmCH;;AA7DyC","sourcesContent":["import React, { Component } from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker, Sphere, Graticule} from \"react-simple-maps\"\nimport { scaleLinear } from \"d3-scale\";\nimport countries_data from \"./data/dataset-json.json\"\n\nexport default class MapCard extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            marker: null,\n            geoUrl : \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\",\n            data: countries_data\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.state.data)\n    }\n\n    render(){        \n        const colorScale = scaleLinear()\n            .domain([0, 15530314])\n            .range([\"#ffedea\", \"#ff5233\"]);\n\n        const wrapperStyles = {\n            height: \"100%\",\n            width: \"100%\",\n            margin: \"0 auto\",\n        }\n\n        return (\n            <div>\n                <ComposableMap\n                projectionConfig={{\n                    rotate: [-10, 0, 0],\n                    scale: 147\n                }}\n                >\n                <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\n                <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\n                {this.state.data.length > 0 && (\n                    <Geographies geography={this.state.geoUrl}>\n                    {({ geographies }) =>\n                        geographies.map(geo => {\n                            const d = this.state.data.find(s => s.ISO === geo.properties.ISO_A3);\n                            // for(let i = 0; i < this.state.data.length; i++){\n                            //     if(this.state.data[i]['ISO'] == geo.properties.ISO_A3){\n                            //         d = this.state.data[i];\n                            //         break;\n                            //     }\n                            // }\n                            return (\n                                <Geography\n                                key={geo.rsmKey}\n                                geography={geo}\n                                fill={d ? colorScale(d[\"total\"]) : \"#F5F4F6\"}\n                                />\n                            );\n                        })\n                    }\n                    </Geographies>\n                )}\n                </ComposableMap>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}