{"ast":null,"code":"var _jsxFileName = \"/Users/russellcoke/Documents/Dev/CovidDash/covid-dash/src/Components/MapCard.js\";\nimport React, { Component } from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker, Sphere, Graticule } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nimport countries_data from \"./data/dataset-json.json\";\nexport default class MapCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      marker: null,\n      geoUrl: \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\",\n      data: countries_data\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const colorScale = scaleLinear().domain([0.29, 0.68]).range([\"#ffedea\", \"#ff5233\"]);\n    const wrapperStyles = {\n      height: \"100%\",\n      width: \"100%\",\n      margin: \"0 auto\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"small-card\",\n      id: this.props.cid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wrapperStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ComposableMap, {\n      projectionConfig: {\n        rotate: [-10, 0, 0],\n        scale: 147\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Sphere, {\n      stroke: \"#E4E5E6\",\n      strokeWidth: 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Graticule, {\n      stroke: \"#E4E5E6\",\n      strokeWidth: 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), this.state.data.length > 0 && /*#__PURE__*/React.createElement(Geographies, {\n      geography: this.state.geoUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, ({\n      geographies\n    }) => geographies.map(geo => {\n      // const d = this.state.data.find(s => s.ISO3 === geo.properties.ISO_A3);\n      return /*#__PURE__*/React.createElement(Geography, {\n        key: geo.rsmKey,\n        geography: geo // fill={d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"}\n        ,\n        fill: \"#F5F4F6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }\n      });\n    })), /*#__PURE__*/React.createElement(Markers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, this.state.marker != null ? /*#__PURE__*/React.createElement(Marker, {\n      marker: this.state.marker,\n      style: {\n        default: {\n          fill: \"#D47D20\"\n        },\n        hover: {\n          fill: \"#FFFFFF\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      cx: 0,\n      cy: 0,\n      r: 7,\n      style: {\n        stroke: \"#D47D20\",\n        strokeWidth: 3,\n        opacity: 0.9\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      textAnchor: \"middle\",\n      y: this.state.marker.markerOffset,\n      style: {\n        fontFamily: \"Roboto, sans-serif\",\n        fill: \"#D47D20\",\n        fontWeight: 800\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, this.state.marker.name)) : null))));\n  }\n\n}","map":{"version":3,"sources":["/Users/russellcoke/Documents/Dev/CovidDash/covid-dash/src/Components/MapCard.js"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","Sphere","Graticule","scaleLinear","countries_data","MapCard","constructor","props","state","marker","geoUrl","data","componentDidMount","render","colorScale","domain","range","wrapperStyles","height","width","margin","cid","rotate","scale","length","geographies","map","geo","rsmKey","default","fill","hover","stroke","strokeWidth","opacity","markerOffset","fontFamily","fontWeight","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker, Sphere, Graticule} from \"react-simple-maps\"\nimport { scaleLinear } from \"d3-scale\";\nimport countries_data from \"./data/dataset-json.json\"\n\nexport default class MapCard extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            marker: null,\n            geoUrl : \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\",\n            data: countries_data\n        }\n    }\n\n    componentDidMount(){\n        \n    }\n\n    render(){        \n        const colorScale = scaleLinear()\n            .domain([0.29, 0.68])\n            .range([\"#ffedea\", \"#ff5233\"]);\n\n        const wrapperStyles = {\n            height: \"100%\",\n            width: \"100%\",\n            margin: \"0 auto\",\n        }\n\n        return (\n            <div className='small-card' id={this.props.cid}>\n                <div style={wrapperStyles}>\n                    <ComposableMap\n                    projectionConfig={{\n                        rotate: [-10, 0, 0],\n                        scale: 147\n                    }}\n                    >\n                    <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\n                    <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\n                    {this.state.data.length > 0 && (\n                        <Geographies geography={this.state.geoUrl}>\n                        {({ geographies }) =>\n                            geographies.map(geo => {\n                            // const d = this.state.data.find(s => s.ISO3 === geo.properties.ISO_A3);\n                            return (\n                                <Geography\n                                key={geo.rsmKey}\n                                geography={geo}\n                                // fill={d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"}\n                                fill={\"#F5F4F6\"}\n                                />\n                            );\n                            })\n                        }\n                        </Geographies>\n                    )}\n                    <Markers>\n                            {this.state.marker != null ?\n                                <Marker\n                                marker={this.state.marker}\n                                style={{\n                                    default: { fill: \"#D47D20\" },\n                                    hover: { fill: \"#FFFFFF\" },\n                                }}\n                                >\n                                <circle\n                                    cx={0}\n                                    cy={0}\n                                    r={7}\n                                    style={{\n                                    stroke: \"#D47D20\",\n                                    strokeWidth: 3,\n                                    opacity: 0.9,\n                                    }}\n                                />\n                                <text\n                                    textAnchor=\"middle\"\n                                    y={this.state.marker.markerOffset}\n                                    style={{\n                                    fontFamily: \"Roboto, sans-serif\",\n                                    fill: \"#D47D20\",\n                                    fontWeight: 800\n                                    }}\n                                >\n                                {this.state.marker.name}\n                                </text>\n                                </Marker>\n                                \n                            : null}\n                        </Markers>\n                    </ComposableMap>\n                </div>\n                \n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}