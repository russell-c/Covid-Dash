{"ast":null,"code":"var _jsxFileName = \"/Users/russellcoke/Documents/Dev/CovidDash/covid-dash/src/Components/StatsCard.jsx\";\nimport React, { Component } from 'react';\nimport countries_data from \"./data/dataset-json.json\";\nexport default class NewsCard extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let country = this.props.country;\n    let countryData = countries_data.find(s => s.CNTRYNAME == country);\n    let pctPopulationInfected = 0;\n\n    if (countryData.population != 0) {\n      pctPopulationInfected = countryData.total / countryData.population * 100;\n    }\n\n    if (countryData != null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"stats-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, \"Country Name: \", countryData.CNTRYNAME), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, \"Total Confirmed Cases: \", countryData.total), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, \"Percentage of Population Infected: \", pctPopulationInfected.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }\n      }, \"Number of Cases\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }\n      }, \"% Change from Previous Day\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, countryData.cases_by_date.slice(Math.max(countryData.cases_by_date.length - 5, 0)).reverse().map(date => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 41\n          }\n        }, date.date_string), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 41\n          }\n        }, date.num_cases), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 41\n          }\n        }, date.change.toFixed(2), \"%\"));\n      }))));\n    } else {\n      return null;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/russellcoke/Documents/Dev/CovidDash/covid-dash/src/Components/StatsCard.jsx"],"names":["React","Component","countries_data","NewsCard","constructor","props","render","country","countryData","find","s","CNTRYNAME","pctPopulationInfected","population","total","toFixed","cases_by_date","slice","Math","max","length","reverse","map","date","date_string","num_cases","change"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAgC;AAE3CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAzB;AACA,QAAIC,WAAW,GAAGN,cAAc,CAACO,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACC,SAAF,IAAeJ,OAAxC,CAAlB;AACA,QAAIK,qBAAqB,GAAG,CAA5B;;AACA,QAAGJ,WAAW,CAACK,UAAZ,IAA0B,CAA7B,EAA+B;AAC3BD,MAAAA,qBAAqB,GAAIJ,WAAW,CAACM,KAAZ,GAAkBN,WAAW,CAACK,UAA/B,GAA2C,GAAnE;AACH;;AACD,QAAGL,WAAW,IAAI,IAAlB,EAAuB;AACnB,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmBA,WAAW,CAACG,SAA/B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA4BH,WAAW,CAACM,KAAxC,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAwCF,qBAAqB,CAACG,OAAtB,CAA8B,CAA9B,CAAxC,MAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHJ,CADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,WAAW,CAACQ,aAAZ,CAA0BC,KAA1B,CAAgCC,IAAI,CAACC,GAAL,CAASX,WAAW,CAACQ,aAAZ,CAA0BI,MAA1B,GAAmC,CAA5C,EAA+C,CAA/C,CAAhC,EAAmFC,OAAnF,GAA6FC,GAA7F,CAAiGC,IAAI,IAAI;AACtG,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACC,WAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAI,CAACE,SAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,IAAI,CAACG,MAAL,CAAYX,OAAZ,CAAoB,CAApB,CAAL,MAHJ,CADJ;AAOH,OARA,CADL,CARJ,CAJJ,CADJ;AA2BH,KA5BD,MA4BO;AACH,aAAO,IAAP;AACH;AACJ;;AA5C0C","sourcesContent":["import React, { Component } from 'react';\nimport countries_data from \"./data/dataset-json.json\"\n\nexport default class NewsCard extends Component{\n\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        let country = this.props.country\n        let countryData = countries_data.find(s => s.CNTRYNAME == country)\n        let pctPopulationInfected = 0\n        if(countryData.population != 0){\n            pctPopulationInfected = (countryData.total/countryData.population)*100\n        }\n        if(countryData != null){\n            return (\n                <div className=\"stats-card\">\n                    <h3>Country Name: {countryData.CNTRYNAME}</h3>\n                    <h4>Total Confirmed Cases: {countryData.total}</h4>\n                    <h4>Percentage of Population Infected: {pctPopulationInfected.toFixed(2)}%</h4>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>Number of Cases</th>\n                                <th>% Change from Previous Day</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {countryData.cases_by_date.slice(Math.max(countryData.cases_by_date.length - 5, 0)).reverse().map(date => {\n                                return(\n                                    <tr>\n                                        <td>{date.date_string}</td>\n                                        <td>{date.num_cases}</td>\n                                        <td>{date.change.toFixed(2)}%</td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}